
# General server config
server:
  name: auth
  path: /forward-auth/
  proxy:
    x_for: 1
    x_proto: 1
    x_host: 1
  host: "0.0.0.0"
  port: 8080

# Local paths to modules and config
modules:
  plugins:
    provider:
      type: folder
      path: /data/pylon_auth/plugins
  #
  requirements:
    mode: relaxed
    activation: bulk
    provider:
      type: folder
      path: /data/pylon_auth/requirements
  #
  config:
    provider:
      type: folder
      path: /data/pylon_auth/configs
  #
  preload:
    market:
      provider:
        type: git
        delete_git_dir: false
        depth: null
      source: https://github.com/carrier-io/market.git
      branch: cc03b0ea16fa436613f68e8a962f551ebe41c5d0

configs:
  market:
    preordered_plugins:
    - auth_core
    - auth_mappers
    - auth_oidc
    - auth_init
    plugin_repo:
    - type: resource
      name: data/plugins.json
  #
  auth_core:
    db_url: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"  # DB connction URL
    db_options:  # DB options
      pool_pre_ping: true
    auth_provider: oidc  # Main auth provider
    default_login_url: "${APP_HOST}/"  # URL to redirect on login with no target set
    default_logout_url: "${APP_HOST}/"  # URL to redirect on logout with no target set
  #
  auth_oidc:
    url_prefix: "/oidc"
    url_mode: "request"
    logout_mode: "get"
    authorization_endpoint: "${APP_HOST}/auth/realms/carrier/protocol/openid-connect/auth"
    token_endpoint: "http://keycloak:8080/auth/realms/carrier/protocol/openid-connect/token"
    token_endpoint_verify: false
    userinfo_endpoint: "http://keycloak:8080/auth/realms/carrier/protocol/openid-connect/userinfo"
    userinfo_endpoint_verify: false
    end_session_endpoint: "${APP_HOST}/auth/realms/carrier/protocol/openid-connect/logout"
    client_id: "carrier-oidc"
    client_secret: "${KEYCLOAK_SECRET}"
  #
  auth_init:
    initial_global_admins:
    - admin
    initial_root_permissions:
    - global_view
  #
  auth_mappers:
    header:
      scopes:
        grafana:
          headers:
            X-WEBAUTH-USER: "'provider_attr'.'nameid'"
            X-WEBAUTH-NAME: "'provider_attr'.'nameid'"
            X-WEBAUTH-EMAIL: "'provider_attr'.'nameid'"

# Session storage
sessions:
  redis:
    host: redis
    password: $REDIS_PASSWORD
  prefix: pylon_auth_session_

# Traefik config
# traefik:
#   redis:
#     host: redis
#     password: $REDIS_PASSWORD
#   rootkey: traefik
#   entrypoint: http
#   rule: PathPrefix(`/forward-auth`)
#   # node_name: auth
#   # node_hostname: pylon_auth
#   node_url: http://carrier-pylon-auth:8080

# Events queue
events:
  rabbitmq:
    host: rabbitmq
    port: 5672
    user: user
    password: $RABBIT_PASSWORD
    vhost: carrier
    queue: events
    hmac_key: key
    hmac_digest: sha512
    callback_workers: 16

# RPC
rpc:
  rabbitmq:
    host: rabbitmq
    port: 5672
    user: user
    password: $RABBIT_PASSWORD
    vhost: carrier
    queue: rpc
    hmac_key: key
    hmac_digest: sha512
    callback_workers: 16
  id_prefix: "auth_"

# Module/config storage
storage:
  endpoint: minio:9000
  access_key: admin
  secret_key: $MINIO_SECRET_KEY
  secure: false
  buckets:
    module: module
    config: config

# Loki logging settings
loki:
  buffering: true
  buffer_capacity: 1000
  buffer_flush_interval: 120
  buffer_flush_deadline: 600
  include_node_name: true
  include_level_name: true
  include_logger_name: true
  verify: true
  url: ${LOKI_HOST}


# Settings for Flask application
application:
  # EXPLAIN_TEMPLATE_LOADING: true
  # PREFERRED_URL_SCHEME: https
  # Sessions
  SECRET_KEY: $APP_SECRET_KEY
  SESSION_COOKIE_NAME: carrier_auth_session_id

# dulwich git manager
git_manager:
  default:
    username:
    password:
    key:
    key_data:
