
# General server config
server:
  name: auth
  path: /forward-auth/
  proxy: true
  host: "0.0.0.0"
  port: 8080

# Local paths to modules and config
modules:
  plugins:
    provider:
      type: folder
      path: /data/pylon_auth/plugins
  #
  requirements:
    mode: relaxed
    provider:
      type: folder
      path: /data/pylon_auth/requirements
  #
  config:
    provider:
      type: folder
      path: /data/pylon_auth/configs
  #
  preload:
    market:
      provider:
        type: git
        delete_git_dir: false
        depth: null
      source: https://github.com/carrier-io/market.git
      branch: main

configs:
  market:
    preordered_plugins:
    - auth_core
    - auth_mappers
    - auth_oidc
    - auth_init
    plugin_repo:
    - type: resource
      name: data/plugins.json
  #
  auth_core:
    db_url: "postgresql://{{ .Values.global.postgresql.auth.username }}:{{ .Values.global.postgresql.auth.password }}@{{ .Values.postgresql.fullnameOverride }}:{{ .Values.global.postgresql.service.ports.postgresql }}/{{ .Values.global.postgresql.auth.database }}"  # DB connction URL
    db_options:  # DB options
      pool_pre_ping: true
    auth_provider: oidc  # Main auth provider
    default_login_url: "http://{{ .Values.global.app.host }}:{{ .Values.global.app.port }}/"  # URL to redirect on login with no target set
    default_logout_url: "http://{{ .Values.global.app.host }}:{{ .Values.global.app.port }}/"  # URL to redirect on logout with no target set
  #
  auth_oidc:
    url_prefix: "/oidc"
    authorization_endpoint: "http://{{ .Values.global.app.host }}:{{ .Values.global.app.port }}/auth/realms/carrier/protocol/openid-connect/auth"
    token_endpoint: "http://{{ .Values.keycloak.fullnameOverride }}:80/auth/realms/carrier/protocol/openid-connect/token"
    token_endpoint_verify: false
    userinfo_endpoint: "http://{{ .Values.keycloak.fullnameOverride }}:80/auth/realms/carrier/protocol/openid-connect/userinfo"
    userinfo_endpoint_verify: false
    end_session_endpoint: "http://{{ .Values.global.app.host }}:{{ .Values.global.app.port }}/auth/realms/carrier/protocol/openid-connect/logout"
    client_id: "carrier-oidc"
    client_secret: "9edcea33-3b8f-4129-8557-eb2ee2de1440"  #TODO extract to values
  #
  auth_init:
    initial_global_admins:
    - admin
    initial_root_permissions:
    - global_view
  #
  auth_mappers:
    header:
      scopes:
        grafana:
          headers:
            X-WEBAUTH-USER: "'provider_attr'.'nameid'"
            X-WEBAUTH-NAME: "'provider_attr'.'nameid'"
            X-WEBAUTH-EMAIL: "'provider_attr'.'nameid'"

# Session storage
sessions:
  redis:
    host: {{ .Values.redis.fullnameOverride }}-master
    password: {{ .Values.redis.auth.password }}
  prefix: pylon_auth_session_

# Traefik config
# traefik:
#   redis:
#     host: redis
#     password: password
#   rootkey: traefik
#   entrypoint: http
#   rule: PathPrefix(`/forward-auth`)
#   # node_name: auth
#   # node_hostname: pylon_auth
#   node_url: http://carrier-pylon-auth:8080

# Events queue
events:
  rabbitmq:
    host: {{ .Values.rabbitmq.fullnameOverride }}
    port: 5672
    user: {{ .Values.rabbitmq.auth.username }}
    password: {{ .Values.rabbitmq.auth.password }}
    vhost: carrier
    queue: events
    hmac_key: key
    hmac_digest: sha512
    callback_workers: 16

# RPC
rpc:
  rabbitmq:
    host: {{ .Values.rabbitmq.fullnameOverride }}
    port: 5672
    user: {{ .Values.rabbitmq.auth.username }}
    password: {{ .Values.rabbitmq.auth.password }}
    vhost: carrier
    queue: rpc
    hmac_key: key
    hmac_digest: sha512
    callback_workers: 16
  id_prefix: "auth_"

# Module/config storage
storage:
  endpoint: {{ .Values.minio.fullnameOverride }}:9000
  access_key: {{ .Values.minio.auth.rootUser }}
  secret_key: {{ .Values.minio.auth.rootPassword }}
  secure: false
  buckets:
    module: module
    config: config

# Loki logging settings
loki:
  buffering: true
  buffer_capacity: 20
  include_node_name: true
  include_level_name: true
  include_logger_name: true
  verify: true
  url: http://{{ .Values.services.loki.name }}:{{ .Values.services.loki.port }}


# Settings for Flask application
application:
  # EXPLAIN_TEMPLATE_LOADING: true
  # Sessions
  SECRET_KEY: SecretDevKeyForLocalUseOnlyChangedOnProd
  SESSION_COOKIE_NAME: auth_session_id

# dulwich git manager
git_manager:
  default:
    username:
    password:
    key:
    key_data:
