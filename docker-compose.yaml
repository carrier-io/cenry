version: '3'
services:
  traefik:
    image: traefik@sha256:0181e35c5af98f7f30fb391f91a6dbd281a90d7cf971e9909e26afd4ea923251
    security_opt:
      - seccomp:unconfined
    environment:
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_REDIS_ENDPOINTS=redis:6379
      - TRAEFIK_PROVIDERS_REDIS_ROOTKEY=traefik
      - TRAEFIK_PROVIDERS_REDIS_PASSWORD=${REDIS_PASSWORD}
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_PING_MANUALROUTING=true
      - TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_HTTP_FORWARDEDHEADERS_TRUSTEDIPS=127.0.0.1/32
      - TRAEFIK_LOG_FORMAT=common
      - TRAEFIK_LOG_LEVEL=DEBUG
    networks:
      - pylon
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./config/traefik/ssl.toml:/etc/traefik/ssl.toml
      - ./config/traefik/config:/config
    depends_on:
      - redis

  redis:
    image: redis@sha256:995e6eaab954e92cadf1a0bb1eab71ae3baae8e02ea4354fd8aa136a61e42247
    security_opt:
      - seccomp:unconfined
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - pylon
    container_name: carrier-redis

  rabbitmq:
    image: rabbitmq@sha256:0da86e1b6744b9ec51565d15c9ee9d2d38bb1ba2c25bfebed65ac84d4988655a
    security_opt:
      - seccomp:unconfined
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=carrier
    networks:
      - pylon
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./config/rabbitmq/advanced.config:/etc/rabbitmq/advanced.config
      - rabbit-data:/var/lib/rabbitmq
    depends_on:
      - redis
    container_name: carrier-rabbit

  postgres:
    image: postgres@sha256:02547253a07e6edd0c070caba1d2a019b7dc7df98b948dc9a909e1808eb77024
    security_opt:
      - seccomp:unconfined
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    restart: unless-stopped
    ports:
      - 5432:5432
    container_name: carrier-postgres
    volumes:
      - ./config/extras/postgre_schemas.sql:/docker-entrypoint-initdb.d/postgre_schemas.sql
      - postgre-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SCHEMAS=${POSTGRES_SCHEMA},${KEYCLOAK_DB_SCHEMA}
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS}
    networks:
      - pylon

  vault:
    image: vault@sha256:eb910358ab988d1f132fbe67869f3a5e63e210f9a4d97dfbb4929a4922ede421
    security_opt:
      - seccomp:unconfined
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    restart: unless-stopped
    environment:
      - 'VAULT_LOCAL_CONFIG={"disable_mlock":true,"listener":{"tcp":{"address":"0.0.0.0:8200","tls_disable": 1}},"storage":{"postgresql":{"connection_url":"postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"}},"ui":false}'
    command: vault server -config=/vault/config/local.json
    ports:
    - 8200:8200
    networks:
      - pylon
    depends_on:
      - postgres
    container_name: carrier-vault

  minio:
    image: minio/minio@sha256:551682a57a940eb304fad155d8749ab8105d3bbd443b9f4cab7da82c463d534a
    security_opt:
      - seccomp:unconfined
    command: server /data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    ports:
      - 9000:9000
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_API_SELECT_PARQUET=on
    volumes:
      - minio-data:/data
    networks:
      - pylon
    container_name: carrier-minio

  influx:
    image: influxdb@sha256:54ef9c1b5c0f4f803c4fa712592b61f0e3294eadb9d6b8d7259e50344e412cd8
    security_opt:
      - seccomp:unconfined
    restart: unless-stopped
    environment:
      - INFLUXDB_META_DIR=$INFLUXDB_META_DIR
      - INFLUXDB_DATA_DIR=$INFLUXDB_DATA_DIR
      - INFLUXDB_DATA_WAL_DIR=$INFLUXDB_DATA_WAL_DIR
      - INFLUXDB_HTTP_ENABLED=$INFLUXDB_HTTP_ENABLED
      - INFLUXDB_DATA_MAX_SERIES_PER_DATABASE=$INFLUXDB_DATA_MAX_SERIES_PER_DATABASE
    ports:
      - 8086:8086
    labels:
      - 'traefik.enable=false'
    volumes:
      - influx-data:/var/lib/influxdb
    networks:
      - pylon
    container_name: carrier-influx

  interceptor:
    platform: linux/amd64
    image: getcarrier/interceptor@sha256:7ff91ee34bb29f80bf1f5967fb672f3dfbc4f910262849287633297886f8244d
    security_opt:
      - seccomp:unconfined
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    depends_on:
      - rabbitmq
    restart: unless-stopped
    container_name: carrier-interceptor
    environment:
      - CPU_CORES=$INTERCEPTOR_TASKS
      - RABBIT_HOST=$RABBIT_HOST
      - RABBIT_USER=$RABBIT_USER
      - RABBIT_PASSWORD=$RABBIT_PASSWORD
      - LOKI_HOST=$APP_HOST
      - RAM_QUOTA=$RAM_QUOTA
      - CPU_QUOTA=$CPU_QUOTA
      - QUEUE_NAME=$RABBIT_QUEUE_NAME
      - PYLON_URL=http://carrier-pylon:8080
    networks:
      - pylon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  interceptor_internal:
    platform: linux/amd64
    image: getcarrier/interceptor@sha256:7ff91ee34bb29f80bf1f5967fb672f3dfbc4f910262849287633297886f8244d
    security_opt:
      - seccomp:unconfined
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    depends_on:
      - rabbitmq
    restart: unless-stopped
    container_name: carrier-interceptor_internal
    environment:
      - CPU_CORES=$INTERNAL_TASKS
      - RABBIT_HOST=$RABBIT_HOST
      - RABBIT_USER=$RABBIT_USER
      - RABBIT_PASSWORD=$RABBIT_PASSWORD
      - LOKI_HOST=$LOKI_HOST_INTERNAL
      - QUEUE_NAME=$INTERNAL_QUEUE
    networks:
      - pylon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  keycloak:
    image: aspect13/keycloak@sha256:8ab8593ddfd5c15678bbda3a039078cf504807d1541456d71f03df28f26d692c
    security_opt:
      - seccomp:unconfined
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    restart: unless-stopped
    container_name: carrier-keycloak
    depends_on:
      - postgres
      - traefik
    volumes:
      - ./config/keycloak/carrier.json:/tmp/carrier.json
      - ./config/keycloak/admin.json:/opt/jboss/keycloak/standalone/configuration/keycloak-add-user.json:ro
      - ./config/keycloak/themes/src/main/resources/theme:/opt/jboss/keycloak/themes
      - ./config/keycloak/entrypoint.sh:/opt/jboss/startup-scripts/entrypoint.sh
      - ./config/keycloak/disable_ssl.sh:/tmp/disable_ssl.sh
    environment:
      - DB_VENDOR=$DATABASE_VENDOR
      - DB_ADDR=postgres
      - DB_DATABASE=$POSTGRES_DB
      - DB_SCHEMA=$KEYCLOAK_DB_SCHEMA
      - DB_USER=$POSTGRES_USER
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - KEYCLOAK_IMPORT=/tmp/carrier.json
      - KC_SPI_THEME_DEFAULT=carrier
      - KEYCLOAK_DEFAULT_THEME=carrier
      - KU=$KEYCLOAK_USER
      - KP=$KEYCLOAK_PASSWORD
      - PROXY_ADDRESS_FORWARDING=$PROXY_ADDRESS_FORWARDING
    networks:
      - pylon
    ports:
      - 8081:8080
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.keycloak.entrypoints=https'
      - 'traefik.http.routers.keycloak.rule=PathPrefix(`/auth`)'
      - 'traefik.http.routers.keycloak.tls=true'
      - 'traefik.http.routers.keycloak-http.entrypoints=http'
      - 'traefik.http.routers.keycloak-http.rule=PathPrefix(`/auth`)'
      - 'traefik.http.services.keycloak.loadbalancer.server.port=8080'
      - 'carrier=keycloak'

  loki:
    image: grafana/loki@sha256:bbf6dbf3264af939a541b6f3c014cba21a2bdc8f22cb7962eee7e9048b41ea5e
    security_opt:
      - seccomp:unconfined
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    restart: unless-stopped
    networks:
      - pylon
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml -table-manager.retention-period=$RETENTION_PERIOD -table-manager.retention-deletes-enabled=$RETENTION_DELETES_ENABLE
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.loki.entrypoints=https'
      - 'traefik.http.routers.loki.rule=PathPrefix(`/loki`)'
      - 'traefik.http.routers.loki.tls=true'
      - 'traefik.http.routers.loki-http.entrypoints=http'
      - 'traefik.http.routers.loki-http.rule=PathPrefix(`/loki`)'
      - 'traefik.http.services.loki.loadbalancer.server.port=3100'
      - 'carrier=loki'
    container_name: carrier-loki

  pylon:
    image: getcarrier/pylon@sha256:e679d21a6acad6fca70e2fdac2fc71ac8c890061c2c4d395f0f17e539fa3bec2
    security_opt:
      - seccomp:unconfined
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    restart: unless-stopped
    container_name: carrier-pylon
    depends_on:
      - postgres
      - traefik
      - loki
      - minio
      - redis
      - vault
      - rabbitmq
      - keycloak
    volumes:
      - .:/data
    env_file:
      - .env
    networks:
      - pylon
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pylon.entrypoints=https'
      - 'traefik.http.routers.pylon.rule=PathPrefix(`/`)'
      - 'traefik.http.routers.pylon.tls=true'
      - 'traefik.http.routers.pylon-http.entrypoints=http'
      - 'traefik.http.routers.pylon-http.rule=PathPrefix(`/`)'
      - 'traefik.http.services.pylon.loadbalancer.server.port=8080'
      - 'traefik.http.middlewares.pylon-auth.forwardauth.address=http://pylon_auth:8080/forward-auth/auth?target=rpc'
      - 'traefik.http.middlewares.pylon-auth.forwardauth.authResponseHeaders=X-Auth-Type,X-Auth-ID,X-Auth-Reference'
      - 'traefik.http.routers.pylon.middlewares=pylon-auth@docker'
      - 'traefik.http.routers.pylon-http.middlewares=pylon-auth@docker'
      - 'carrier=pylon'

  pylon_auth:
    image: getcarrier/pylon@sha256:e679d21a6acad6fca70e2fdac2fc71ac8c890061c2c4d395f0f17e539fa3bec2
    security_opt:
      - seccomp:unconfined
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    restart: unless-stopped
    container_name: carrier-pylon-auth
    depends_on:
      - postgres
      - traefik
      - loki
      - minio
      - redis
      - vault
      - rabbitmq
      - keycloak
    volumes:
      - .:/data
    env_file:
      - .env
    environment:
      - CORE_CONFIG_SEED=file:/data/config/pylon_auth.yml
    networks:
      - pylon
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pylon-auth.entrypoints=https'
      - 'traefik.http.routers.pylon-auth.rule=PathPrefix(`/forward-auth`)'
      - 'traefik.http.routers.pylon-auth.tls=true'
      - 'traefik.http.routers.pylon-auth-http.entrypoints=http'
      - 'traefik.http.routers.pylon-auth-http.rule=PathPrefix(`/forward-auth`)'
      - 'traefik.http.services.pylon-auth.loadbalancer.server.port=8080'
      - 'carrier=pylon-auth'

volumes:
  postgre-data:
  rabbit-data:
  redis-data:
  minio-data:
  influx-data:

networks:
  pylon:
